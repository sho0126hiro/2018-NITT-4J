/***  mon2ex06.txt  ***/

1．課題
	テキストエディタとアセンブラを用いて次のプログラムを作成しな さい。
	FF200から機械語プログラムを置きなさい。
	FF800番地 - FF801番地に2バイトの値が，FF802番地 - FF803番地に2バイトの値があり，
	それぞれ正の整数であるとして，この2数の積を求め，FF804番地 - FF805番地に保存するプログラム。
	掛け算の結果がオーバーフローしても構わない。
	ただしMULで始まる掛け算命令を用いてはならない。

	プログラム本体および以下を報告しなさい。
	プログラムが正しく動作していることを検証し，検証の様子も報告しなさい。
	検証では2×3，0x22×0x33，0xaa×0xbbを行い，手計算の値と比較しなさい。
	実行結果を貼り付けるだけでなく，まとめのところで実行検証結果についてまとめなさい。

2．使用したプログラム・実行結果
	//もとにしたCプログラム
	short int x00=0x55;
	short int x10=0xa;
	short int y0; /* y0=x00*x10 */

	int main()
	{
	    short int x0,x1,x2;
	    x0=x00;
	    x1=x10;
	    x2=0;
	    do {
	        if(x1&1) x2+=x0;
	        x0<<=1;
	        x1>>=1;
	    } while (x1);
	    y0=x2;
	}
	//作成したアセンブリプログラム
	    .CPU 300HA
	    .SECTION A,DATA,LOCATE=H'0FF030
	    .DATA.L H'0FF200  ;リセットベクトル

	    .SECTION P,CODE,LOCATE=H'0FF200
	    MOV.L  #H'FFF00,ER7  ;スタックポインタ設定
	_main:                              ; function: main
	    MOV.W       @H'FF800:24,E0      ; @H'0ff800->E0
	    MOV.W       @H'FF802:24,R0      ; @H'0ff802->R0
	    SUB.W       R1,R1               ; R1=0
	L10:                              
	    BTST.B      #0,R0L
	    BEQ         L11:8
	    ADD.W       E0,R1
	L11:                              
	    SHLL.W      E0
	    SHAR.W      R0
	    BNE         L10:8
	    MOV.W       R1,@H'FF804:24      ; R0->ff804
	EternalLoop:
	    BRA EternalLoop ;永久ループ

	    .END
	
	//Tera Termのログ

	 H8/3048 Series Advanced Mode Monitor Ver. 3.0A
	 Copyright (C) 2003 Renesas Technology Corp.

	: l
	  Top Address=FF030
	  End Address=FF227
	: da ff200 ff20 26
	  <ADDR>  <CODE>                <MNEMONIC> <OPERAND>
	  FF200   7A07000FFF00          MOV.L      #H'000FFF00:32,ER7
	  FF206   6B28000FF800          MOV.W      @H'FF800:24,E0
	  FF20C   6B20000FF802          MOV.W      @H'FF802:24,R0
	  FF212   1911                  SUB.W      R1,R1
	  FF214   7308                  BTST       #0:3,R0L
	  FF216   4702                  BEQ        FF21A:8
	  FF218   0981                  ADD.W      E0,R1
	  FF21A   1018                  SHLL.W     E0
	  FF21C   1190                  SHAR.W     R0
	  FF21E   46F4                  BNE        FF214:8
	  FF220   6BA1000FF804          MOV.W      R1,@H'FF804:24
	  FF226   40FE                  BRA        FF226:8
	: b ff226
	: r
	  PC=0FF200  CCR=80:I.......  SP=000FFF00
	  ER0=00000000  ER1=00000000  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	: d ff800 ff80f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   00 55 00 0A 00 00 FF 7F  FF FF FF FF FB FF F7 FF   "................"
	: m ff800
	  FF800   00  ?  00
	  FF801   55  ?  02
	  FF802   00  ?  00
	  FF803   0A  ?  03
	  FF804   00  ?  .
	: g
	  Break at PC=FF226
	  PC=0FF226  CCR=81:I......C  SP=000FFF00
	  ER0=00080000  ER1=00000006  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	: d ff800 ff80f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   00 02 00 03 00 06 FF 7F  FF FF FF FF FB FF F7 FF   "................"
	: m ff800
	  FF800   00  ?  00
	  FF801   22  ?  22
	  FF802   00  ?  00
	  FF803   03  ?  33
	  FF804   00  ?  .
	: .pc
	  PC=0FF226  ?  ff200
	  CCR=81  ?  .
	: g
	  Break at PC=FF226
	  PC=0FF226  CCR=81:I......C  SP=000FFF00
	  ER0=08800000  ER1=000006C6  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	: d ff800 ff80f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   00 22 00 33 06 C6 FF 7F  FF FF FF FF FB FF F7 FF   ".".3............"
	: m ff800
	  FF800   00  ?  00
	  FF801   22  ?  aa
	  FF802   00  ?  00
	  FF803   33  ?  bb
	  FF804   06  ?  .
	: .pc
	  PC=0FF226  ?  ff200
	  CCR=81  ?  .
	: g
	  Break at PC=FF226
	  PC=0FF226  CCR=81:I......C  SP=000FFF00
	  ER0=AA000000  ER1=00007C2E  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	: d ff800 ff80f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   00 AA 00 BB 7C 2E FF 7F  FF FF FF FF FB FF F7 FF   "....|..........."
	: 	

3．考察

	手計算の結果
	 (2)16 × (3)16 = (6)16
	 (22)16 × (33)16 = (6C6)16
	 (AA) × (BB) = (7C2E)16

	メモリの値
	02×03の演算後
	: d ff800 ff80f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   00 02 00 03 00 06 FF 7F  FF FF FF FF FB FF F7 FF   "................"
	ff804-ff805の値が、0006になっており、正しい値がメモリに格納されていることがわかる。
	
	22×33の演算後
	: d ff800 ff80f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   00 22 00 33 06 C6 FF 7F  FF FF FF FF FB FF F7 FF   ".".3............"
	ff804-ff805の値が、06C6になっており、正しい値がメモリに格納されていることがわかる。
	計算はあってる．22と33も16進数であることに注意しなさい．

	AA×BBの演算後
	: d ff800 ff80f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   00 AA 00 BB 7C 2E FF 7F  FF FF FF FF FB FF F7 FF   "....|..........."
	ff804-ff805の値が、7C2Eになっており、正しい値がメモリに格納されていることがわかる。

	実行結果を見ると、すべての動作結果が手計算と同じ値になっているため、正しく動作していると考えられる。
4．まとめ
	シフト命令と加算命令で乗算を行うプログラムのアルゴリズムを理解することができた。
	また、アセンブラ言語でのプログラムの動作手順、プログラムの構造を理解した。

