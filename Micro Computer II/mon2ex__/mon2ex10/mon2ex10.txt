/***  mon2ex10.txt  ***/

1．課題
	テキストエディタとアセンブラを用いて次のプログラムを作成 しなさい。
	FF200から機械語プログラムを置きなさい。
	C言語の関数インターフェイス（引数，関数の値の返し方）で２つのint型（2バイト）の引数2つを
	受取り，課題６の１で作った掛け算を行い，関数の値としてint型（２バイト）の値を返すサブルーチン。
	呼び出しルーチンも次のように作りなさい。
	FF800番地 - FF801番地に2バイトの値が，FF802番地 - FF803番地に2バイトの値を引数に載 せ，
	掛け算サブルーチンを呼び出し，この2数の積を求め，FF804番地 - FF805番地に保存する。

	プログラム本体および以下を報告しなさい。
	プログラムが正しく動作していることを検証し，検証の様子も報告しなさい。
	検証では2×3，0x22×0x33，0xaa×0xbbを行い，手計算の値と比較しなさい。
	実行結果を貼り付けるだけでなく，まとめのところで実行検証結果についてまとめなさい。

2．使用したプログラム・実行結果
	//もとにしたCプログラム
	short int x00=0x0002;
	short int x10=0x0003;
	short int y0; /* y0=x00*x10 */

	int Multiplication(short int x0,short int x1){
		short int x2;
		x2=0;
		do {
	        if(x1&1) x2+=x0;
	        x0<<=1;
	        x1>>=1;
	    } while (x1);
	    return x2;
	}
	int main()
	{
	    unsigned short int x0,x1,x2;
	    y0=Multiplication(x00,x10);
	}
	//作成したアセンブリプログラム
	    .CPU 300HA
	    .SECTION A,DATA,LOCATE=H'0FF030
	    .DATA.L H'0FF200  ;リセットベクトル

	    .SECTION P,CODE,LOCATE=H'0FF200
	    MOV.L  #H'FFF00,ER7  ;スタックポインタ設定
	_main:                           ; function: main
	          MOV.W       @H'FF802:24,E0
	          MOV.W       @H'FF800:24,R0
	          BSR         _Multiplication:8
	          MOV.W       R0,@H'FF804:24
	EternalLoop:
	    BRA EternalLoop ;永久ループ

	_Multiplication:                 ; function: Multiplication
	          MOV.W       E0,R1
	          SUB.W       E0,E0
	L15:                              
	          BTST.B      #0,R1L
	          BEQ         L16:8
	          ADD.W       R0,E0
	L16:                              
	          SHLL.W      R0
	          SHAR.W      R1
	          BNE         L15:8
	          MOV.W       E0,R0
	          RTS
	    .END

	//Tera Termのログ

	 H8/3048 Series Advanced Mode Monitor Ver. 3.0A
	 Copyright (C) 2003 Renesas Technology Corp.

	: l
	  Top Address=FF030
	  End Address=FF22F
	: da ff200 ff22e
	  <ADDR>  <CODE>                <MNEMONIC> <OPERAND>
	  FF200   7A07000FFF00          MOV.L      #H'000FFF00:32,ER7
	  FF206   6B28000FF802          MOV.W      @H'FF802:24,E0
	  FF20C   6B20000FF800          MOV.W      @H'FF800:24,R0
	  FF212   5508                  BSR        FF21C:8
	  FF214   6BA0000FF804          MOV.W      R0,@H'FF804:24
	  FF21A   40FE                  BRA        FF21A:8
	  FF21C   0D81                  MOV.W      E0,R1
	  FF21E   1988                  SUB.W      E0,E0
	  FF220   7309                  BTST       #0:3,R1L
	  FF222   4702                  BEQ        FF226:8
	  FF224   0908                  ADD.W      R0,E0
	  FF226   1010                  SHLL.W     R0
	  FF228   1191                  SHAR.W     R1
	  FF22A   46F4                  BNE        FF220:8
	  FF22C   0D80                  MOV.W      E0,R0
	  FF22E   5470                  RTS  
	: b ff21a  
	: m ff800
	  FF800   FF  ?  00
	  FF801   FF  ?  02
	  FF802   FF  ?  00
	  FF803   FF  ?  03
	  FF804   FF  ?  .
	: .pc
	  PC=0FF200  ?  .
	: g
	  Break at PC=FF21A
	  PC=0FF21A  CCR=81:I......C  SP=000FFF00
	  ER0=00060006  ER1=00000000  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	: d ff800 ff80f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   00 02 00 03 00 06 FF 7F  7F FF FF EF 7B FF F7 FF   "............{..."
	: .pc
	  PC=0FF21A  ?  ff200
	  CCR=81  ?  .
	: m ff800
	  FF800   00  ?  00
	  FF801   02  ?  22
	  FF802   00  ?  00
	  FF803   03  ?  33
	  FF804   00  ?  . 
	: g
	  Break at PC=FF21A
	  PC=0FF21A  CCR=81:I......C  SP=000FFF00
	  ER0=06C606C6  ER1=00000000  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	: d ff800 ff80f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   00 22 00 33 06 C6 FF 7F  7F FF FF EF 7B FF F7 FF   ".".3........{..."
	: .pc
	  PC=0FF21A  ?  ff200
	  CCR=81  ?  .
	: m ff800
	  FF800   00  ?  00
	  FF801   22  ?  aa
	  FF802   00  ?  00
	  FF803   33  ?  bb
	  FF804   06  ?  .
	: g
	  Break at PC=FF21A
	  PC=0FF21A  CCR=A1:I.H....C  SP=000FFF00
	  ER0=7C2E7C2E  ER1=00000000  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	: d ff800 ff80f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   00 AA 00 BB 7C 2E FF 7F  7F FF FF EF 7B FF F7 FF   "....|.......{..."
  
3．考察
	手計算の結果
	 ( 2)16 × ( 3)16 = (   6)16
	 (22)16 × (33)16 = ( 6C6)16
	 (AA)16 × (BB)16 = (7C2E)16

	メモリの値
	02×03の演算後
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   00 02 00 03 00 06 FF 7F  7F FF FF EF 7B FF F7 FF   "............{..."
	ff804-ff805の値が、0006になっており、正しい値がメモリに格納されていることがわかる。
	
	22×33の演算後
	: d ff800 ff80f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   00 22 00 33 06 C6 FF 7F  7F FF FF EF 7B FF F7 FF   ".".3........{..."
	ff804-ff805の値が、06C6になっており、正しい値がメモリに格納されていることがわかる。

	AA×BBの演算後
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   00 AA 00 BB 7C 2E FF 7F  7F FF FF EF 7B FF F7 FF   "....|.......{..."
	ff804-ff805の値が、7C2Eになっており、正しい値がメモリに格納されていることがわかる。

	実行結果を見ると、すべての動作結果が手計算と同じ値になっているため、正しく動作していると考えられる。

4．まとめ
	mon2ex06の課題のプログラムを関数として実装することができた．
	第一引数には，R0,第二引数にはE0を載せてサブルーチンに飛び，
	返り値は，R0に載せてリターンしていることがわかる．


