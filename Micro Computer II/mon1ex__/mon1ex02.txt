/***  mon1ex02.txt  ***/

1．課題
	FF200から機械語プログラムを置きなさい。
	FF700,FF701番地の2byteデータ，FF702,FF703番地の2byteデータ，FF704,FF705番地の2byteデータ,
	FF706,FF707番地の2byteデータをすべて加え，FF708,FF709番地の2byteデータにしなさい。
	オーバーフローしてもかまわないこととする。

	作成したプログラム本体を報告に載せなさい。

	実行時に4つのデータを適当にセットし，全作業を報告しなさい。
	ただし，以下の内容を含むこと
	実行前のFF700番地?FF710番地の様子
	プログラムの逆アッセンブル結果
	１命令ごとに実行して実行の様子
	実行後のFF700番地?FF710番地の様子

	1つの機械語命令を実行すると，プログラムカウンタの値が増加するが，増分値は
	何に依存するのかを考察に盛り込みなさい。
	4つの値の和は幾つになるのが正解で，それはどこに見えているのかも盛り込みなさい。

2．使用したプログラム・実行結果
	teratarmのログを以下に示す．

	 H8/3048 Series Advanced Mode Monitor Ver. 3.0A
	 Copyright (C) 2003 Renesas Technology Corp.

	: a ff200
	  FF200   >  mov.w @ff700:24,r0
	  FF206   >  mov.w @ff702:24,r1
	  FF20C   >  add.w r1,r0
	  FF20E   >  mov.w @ff704:24,r1
	  FF214   >  add.w r1,r0
	  FF216   >  mov.w @ff706:24,r1
	  FF21C   >  add.w r1,r0
	  FF21E   >  mov.w r0,@ff708:24
	  FF224   >  .
	: m ff700
	  FF700   FF  ?  00
	  FF701   FF  ?  01
	  FF702   FF  ?  00
	  FF703   FF  ?  04
	  FF704   FF  ?  00
	  FF705   FF  ?  10
	  FF706   FF  ?  00
	  FF707   FF  ?  12
	  FF708   DB  ?  .
	: d ff700 ff70f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF700   00 01 00 04 00 10 00 12  DB BE FF DF FF FF FF FF   "................"
	: d da ff200 ff21e
	  <ADDR>  <CODE>                <MNEMONIC> <OPERAND>
	  FF200   6B20000FF700          MOV.W      @H'FF700:24,R0
	  FF206   6B21000FF702          MOV.W      @H'FF702:24,R1
	  FF20C   0910                  ADD.W      R1,R0
	  FF20E   6B21000FF704          MOV.W      @H'FF704:24,R1
	  FF214   0910                  ADD.W      R1,R0
	  FF216   6B21000FF706          MOV.W      @H'FF706:24,R1
	  FF21C   0910                  ADD.W      R1,R0
	  FF21E   6BA0000FF708          MOV.W      R0,@H'FF708:24
	: r
	  PC=000000  CCR=80:I.......  SP=000FFF00
	  ER0=00000000  ER1=00000000  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	: .pc
	  PC=000000  ?  ff200
	  CCR=80  ?  .
	: r
	  PC=0FF200  CCR=80:I.......  SP=000FFF00
	  ER0=00000000  ER1=00000000  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	: s
	  PC=0FF206  CCR=80:I.......  SP=000FFF00
	  ER0=00000001  ER1=00000000  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	  FF200   6B20000FF700          MOV.W      @H'FF700:24,R0
	: s
	  PC=0FF20C  CCR=80:I.......  SP=000FFF00
	  ER0=00000001  ER1=00000004  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	  FF206   6B21000FF702          MOV.W      @H'FF702:24,R1
	: s
	  PC=0FF20E  CCR=80:I.......  SP=000FFF00
	  ER0=00000005  ER1=00000004  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	  FF20C   0910                  ADD.W      R1,R0
	: s
	  PC=0FF214  CCR=80:I.......  SP=000FFF00
	  ER0=00000005  ER1=00000010  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	  FF20E   6B21000FF704          MOV.W      @H'FF704:24,R1
	: s
	  PC=0FF216  CCR=80:I.......  SP=000FFF00
	  ER0=00000015  ER1=00000010  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	  FF214   0910                  ADD.W      R1,R0
	: s
	  PC=0FF21C  CCR=80:I.......  SP=000FFF00
	  ER0=00000015  ER1=00000012  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	  FF216   6B21000FF706          MOV.W      @H'FF706:24,R1
	: s
	  PC=0FF21E  CCR=80:I.......  SP=000FFF00
	  ER0=00000027  ER1=00000012  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	  FF21C   0910                  ADD.W      R1,R0
	: s
	  PC=0FF224  CCR=80:I.......  SP=000FFF00
	  ER0=00000027  ER1=00000012  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	  FF21E   6BA0000FF708          MOV.W      R0,@H'FF708:24
	: d ff700 ff70f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF700   00 01 00 04 00 10 00 12  00 27 FF DF FF FF FF FF   ".........'......"

3．考察
	
	モニタプログラム時の動作について以下にまとめた．
		
		1．a ff200                 | ff200からアセンブリ言語プログラムを入力した．
		2．m  ff700                |  ff700からメモリ内に格納されている値を変化させる．
		3. d ff700 ff70f           | 作業用メモリを確認した
		                           | 現時点で ff700-ff707には00 01 00 04 00 10 00 12が格納されていることが確認できる．
		4. d da ff200 ff21e        |  逆アセンブルで確認することができた．\）
		5. r                       | レジスタの確認：この時プログラムカウンタの値は 000000
		6. .pc + ff200             | プログラムカウンタをセットする(ff200)
		7. r                       | レジスタの確認：この時プログラムカウンタの値は 0ff200 に変化している．
		8. s                       | 1命令ずつ実行
		9. 実行中                 | ER0=00000001  ER1=00000004が代入され
		                           | ER1とER0を足した値がER0にセットされる．
		                           | (ER0=00000001 + ER1=00000004)
		                           | (ER0=00000005)
		                           | ER1=00000010が代入され
		                           | ER1とER0を足した値がER0にセットされる．
		                           | (ER0=00000005 + ER1=00000010)
		                           | (ER0=00000015)
		                           | ER1=00000012が代入され
		                           | ER1とER0を足した値がER0にセットされる．
		                           | (ER0=00000015  ER1=00000012)
		                           | (ER0=00000027)
		                           | 
		                           | まとめると，実行中に1+4+10+12を計算している．
		                           | 答えは27となり，問題ないことがわかる．
		                           | 
		10.d ff700 ff70f           | 作業用メモリの確認
		                           | ff700-ff709に格納している値が変化しているのが確認できる．
		                           | （00 01 00 04 00 10 00 12  00 27）
	
	ｓコマンドで1ステップ進めるごとに，PC（プログラムカウンタ）の値が変化するが，
	変化量はアセンブリ言語プログラムの入力ができるアドレスに依存していることがわかる．
	
4．まとめ
	mon1ex01を応用して，4つのデータの総和を求めることができた．
	細かいコマンドや，意味なども理解できていたので，スムーズに進めることができた．