/***  mon2ex11.txt  ***/
/***  s16306  4J42  廣瀬 翔  ***/

1．課題
	テキストエディタと アセンブラを用いて次のプログラムを作成しなさい。
	FF200から機械語プログラムを置きなさい。
	C言語の関数インターフェイス（引数，関数の値の返し方）で２つのint型（2バイト）の引数2つを
	受取り，課題６の２で作った割り算を行い，商だけを関数の値として返すサブルーチン。
	（余りは返さない）
	割り算は第1引数÷第2引数の演算とする。
	呼び出しルーチンも次のように作りなさい。
	FF800番地 - FF801番地に2バイトの値（割られる数）が，FF802番地 - FF803番地に2バイ トの値
	（割る数）があるものとし，これらを引数に載せ，
	割り算サブルーチンを呼び出し，この2数の商を求め，
	サブルーチンが返してきた値をFF804番地 -  FF805番地に保存する。

	プログラム本体および以下を報告しなさい。
	プログラムが正しく動作していることを検証し，検証の様子も報告しなさい。
	検証では3÷2，0x1000÷0x33，0xaaaa÷0xbbを行い，手計算の値と比較しなさい。
	実行結果を貼り付けるだけでなく，まとめのところで実行検証結果についてまとめなさい。

2．使用したプログラム・実行結果
	//もとにしたCプログラム
	unsigned short int x00=0x3;
	unsigned short int x10=0x2;
	unsigned short int y0,y1; /* x00 div x10 = y1 ... y0 */

	int Division(unsigned short int x0,unsigned short int x1){
	    unsigned short int x2,x3;
	    x2=0;
	    x3=1;
	    while (x1<x0) {
	        x1<<=1;
	        x3<<=1;
	    }
	    while (x3!=0) {
	        if(x1<=x0) {
	            x0-=x1;
	            x2+=x3;
	        }
	        x1>>=1;
	        x3>>=1;
	    }
	    return x2;
	}

	int main()
	{
	    y1=Division(x00,x10);
	}
	//作成したアセンブリプログラム
	    .CPU 300HA
	    .SECTION A,DATA,LOCATE=H'0FF030
	    .DATA.L H'0FF200  ;リセットベクトル
	    .SECTION P,CODE,LOCATE=H'0FF200

	_main:                           ; function: main
	          MOV.W       @H'0FF802:24,E0
	          MOV.W       @H'0FF800:24,R0
	          BSR         _Division:8
	          MOV.W       R0,@H'0FF804:24
	EternalLoop:
	    BRA EternalLoop ;永久ループ
	_Division:                       ; function: Division
	          SUB.W       E1,E1
	          MOV.W       #1:16,R1
	          BRA         L21:8
	L20:                              
	          SHLL.W      E0
	          SHLL.W      R1
	L21:                              
	          CMP.W       R0,E0
	          BCS         L20:8
	          BRA         L23:8
	L22:                              
	          CMP.W       R0,E0
	          BHI         L24:8
	          SUB.W       E0,R0
	          ADD.W       R1,E1
	L24:                              
	          SHLR.W      E0
	          SHLR.W      R1
	L23:                              
	          MOV.W       R1,R1
	          BNE         L22:8
	          MOV.W       E1,R0
	          RTS
	          .END

	//Tera Termのログ
	
	 H8/3048 Series Advanced Mode Monitor Ver. 3.0A
	 Copyright (C) 2003 Renesas Technology Corp.

	: l
	  Top Address=FF030
	  End Address=FF23B           
	: da ff200 ff23a
	  <ADDR>  <CODE>                <MNEMONIC> <OPERAND>
	  FF200   6B28000FF802          MOV.W      @H'FF802:24,E0
	  FF206   6B20000FF800          MOV.W      @H'FF800:24,R0
	  FF20C   5508                  BSR        FF216:8
	  FF20E   6BA0000FF804          MOV.W      R0,@H'FF804:24
	  FF214   40FE                  BRA        FF214:8
	  FF216   1999                  SUB.W      E1,E1
	  FF218   79010001              MOV.W      #H'0001:16,R1
	  FF21C   4004                  BRA        FF222:8
	  FF21E   1018                  SHLL.W     E0
	  FF220   1011                  SHLL.W     R1
	  FF222   1D08                  CMP.W      R0,E0
	  FF224   45F8                  BCS        FF21E:8
	  FF226   400C                  BRA        FF234:8
	  FF228   1D08                  CMP.W      R0,E0
	  FF22A   4204                  BHI        FF230:8
	  FF22C   1980                  SUB.W      E0,R0
	  FF22E   0919                  ADD.W      R1,E1
	  FF230   1118                  SHLR.W     E0
	  FF232   1111                  SHLR.W     R1
	  FF234   0D11                  MOV.W      R1,R1
	  FF236   46F0                  BNE        FF228:8
	  FF238   0D90                  MOV.W      E1,R0
	  FF23A   5470                  RTS        
	: b ff214
	: m ff800
	  FF800   FF  ?  00
	  FF801   FF  ?  03
	  FF802   FF  ?  00
	  FF803   FF  ?  02
	  FF804   FF  ?  .
	: .pc
	  PC=0FF200  ? .
	: g
	  Break at PC=FF214
	  PC=0FF214  CCR=81:I......C  SP=000FFF00
	  ER0=00010001  ER1=00010000  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	: d ff200         
	: d ff800 ff80f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   00 03 00 02 00 01 FF 7F  7F FF FF EF FB FF F7 FF   "................"
	: .pc
	  PC=0FF214  ?  ff200
	  CCR=81  ?  .
	: m ff800
	  FF800   00  ?  10
	  FF801   03  ?  00
	  FF802   00  ?  00
	  FF803   02  ?  33
	  FF804   00  ?  .
	: g
	  Break at PC=FF214
	  PC=0FF214  CCR=81:I......C  SP=000FFF00
	  ER0=00190050  ER1=00500000  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	: d ff800 ff80f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   10 00 00 33 00 50 FF 7F  7F FF FF EF FB FF F7 FF   "...3.P.........."
	: .pc
	  PC=0FF214  ?  ff200
	  CCR=81  ?  .
	: m ff800
	  FF800   10  ?  aaaa    aa
	  FF801   00  ?  aa
	  FF802   00  ?  00
	  FF803   33  ?  bb
	  FF804   00  ?  .
	: g
	  Break at PC=FF214
	  PC=0FF214  CCR=81:I......C  SP=000FFF00
	  ER0=005D00E9  ER1=00E90000  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	: d ff800 ff80f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   AA AA 00 BB 00 E9 FF 7F  7F FF FF EF FB FF F7 FF   "................"

3．考察
	手計算結果：
		(   3)16/(   2)16=(   1)16 あまり (   1)16
		(1000)16/(  33)16=(  50)16 あまり (  10)16
		(aaaa)16/(  bb)16=(  bb)16 あまり (  77)16
	実行結果：
		1．(3)16/(2)16 動作結果のメモリの値
			  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
			FF800   00 03 00 02 00 01 FF 7F  7F FF FF EF FB FF F7 FF   "................"
			これより、商は1であることが求まった。
		2．(1000)16/(33)16 動作結果のメモリの値
			  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
			  FF800   10 00 00 33 00 50 FF 7F  7F FF FF EF FB FF F7 FF   "...3.P.........."
			 これより、50あまり10であることが求まった。
		3．(aaaa)16/(bb)16 動作結果のメモリの値
			  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
			  FF800   AA AA 00 BB 00 E9 FF 7F  7F FF FF EF FB FF F7 FF   "................"
			これより、BBあまり77であることが求まった。
	
	すべての実行結果において，手計算結果と一致していることから，プログラムは正しく動作していると考えられる．
	
	
4．まとめ
	mon02ex07で作成したプログラムを改変し，関数として実装することができた．
	第一引数には，R0,第二引数にはE0を載せてサブルーチンに飛び，
	返り値は，R0に載せてリターンしていることがわかる．
	割り算の場合，掛け算(mon2ex10)と違い，引数の順序で結果が異なってしまうため．
	引数の取り扱い，変数の指定方法には十分注意しなければならない．
