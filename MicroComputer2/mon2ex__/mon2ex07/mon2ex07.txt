/***  mon2ex07.txt  ***/
/***  s16306  4J42  廣瀬 翔  ***/

1．課題
	テキストエディタと アセンブラを用いて次のプログラムを作成しなさい。
	FF200から機械語プログラムを置きなさい。
	FF800番地 - FF801番地に2バイトの値Aが，FF802番地 - FF803番地に2バイトの値Bがあ り，
	それぞれ正の整数であるとして，この2数の商（A/B）と余り（A%B）を求め，
	商をFF804番地 - FF805番地に，余りをFF806番地 - FF807番地に保存するプログラム。
	「（A - 余り）÷B＝商」の関係をもつこと。
	0による割り算は行わないものとする。
	ただしDIVで始まる割算命令を用いてはならない。

	プログラム本体および以下を報告しなさい。
	プログラムが正しく動作していることを検証し，検証の様子も報告しなさい。
	検証では3÷2，0x1000÷0x33，0xaaaa÷0xbbを行い，手計算の値と比較しなさい。
	実行結果を貼り付けるだけでなく，まとめのところで実行検証結果についてまとめなさい。

2．使用したプログラム・実行結果
	//もとにしたCプログラム
	unsigned short int x00=0x87;
	unsigned short int x10=0xa;
	unsigned short int y0,y1; /* x00 div x10 = y1 ... y0 */

	int main()
	{
	    unsigned short int x0,x1,x2,x3;
	    x0=x00;
	    x1=x10;
	    x2=0;
	    x3=1;
	    while (x1<x0) {
	        x1<<=1;
	        x3<<=1;
	    }
	    while (x3!=0) {
	        if(x1<=x0) {
	            x0-=x1;
	            x2+=x3;
	        }
	        x1>>=1;
	        x3>>=1;
	    }
	    y1=x2;
	    y0=x0;
	}
	//作成したアセンブリプログラム
	    .CPU 300HA
	    .SECTION A,DATA,LOCATE=H'0FF030
	    .DATA.L H'0FF200  ;リセットベクトル

	    .SECTION P,CODE,LOCATE=H'0FF200
	    MOV.L  #H'FFF00,ER7  ;スタックポインタ設定
	_main:                           ; function: main
	    MOV.W       @H'0FF800:24,R1  ; x1 : R1
	    MOV.W       @H'0FF802,R0     ; x0 : R0
	    SUB.W       E1,E1            ; x2 : E1
	    MOV.W       #1:16,E0         ; x3 : E0
	    BRA         L15:8
	L14:                              
	    SHLL.W      R0
	    SHLL.W      E0
	L15:                              
	    CMP.W       R1,R0
	    BLT         L14:8            ; Less Than (x1<x0)
	    BRA         L17:8
	L16:                              
	    CMP.W       R1,R0
	    BGT         L18:8            ; Greater Than(x1>x0)
	    SUB.W       R0,R1
	    ADD.W       E0,E1
	L18:                              
	    SHAR.W      R0
	    SHAR.W      E0
	L17:                              
	    MOV.W       E0,E0
	    BNE         L16:8
	    MOV.W       E1,@H'0FF804:24
	    MOV.W       R1,@H'0FF806:24
	EternalLoop:
	    BRA EternalLoop ;永久ループ

	    .END

	//Tera Termのログ
	 H8/3048 Series Advanced Mode Monitor Ver. 3.0A
	 Copyright (C) 2003 Renesas Technology Corp.

	: l
	  Top Address=FF030
	  End Address=FF241
	: da ff200 ff240
	  <ADDR>  <CODE>                <MNEMONIC> <OPERAND>
	  FF200   7A07000FFF00          MOV.L      #H'000FFF00:32,ER7
	  FF206   6B21000FF800          MOV.W      @H'FF800:24,R1
	  FF20C   6B20000FF802          MOV.W      @H'FF802:24,R0
	  FF212   1999                  SUB.W      E1,E1
	  FF214   79080001              MOV.W      #H'0001:16,E0
	  FF218   4004                  BRA        FF21E:8
	  FF21A   1010                  SHLL.W     R0
	  FF21C   1018                  SHLL.W     E0
	  FF21E   1D10                  CMP.W      R1,R0
	  FF220   45F8                  BCS        FF21A:8
	  FF222   400C                  BRA        FF230:8
	  FF224   1D10                  CMP.W      R1,R0
	  FF226   4204                  BHI        FF22C:8
	  FF228   1901                  SUB.W      R0,R1
	  FF22A   0989                  ADD.W      E0,E1
	  FF22C   1110                  SHLR.W     R0
	  FF22E   1118                  SHLR.W     E0
	  FF230   0D88                  MOV.W      E0,E0
	  FF232   46F0                  BNE        FF224:8
	  FF234   6BA9000FF804          MOV.W      E1,@H'FF804:24
	  FF23A   6BA1000FF806          MOV.W      R1,@H'FF806:24
	  FF240   40FE                  BRA        FF240:8
	: b ff240
	: d ff800 ff80f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   FF FF FF FF FF FE FF 7F  7F FF FF FF FB FF F7 FF   "................"
	: m ff800
	  FF800   FF  ?  00
	  FF801   FF  ?  03
	  FF802   FF  ?  00
	  FF803   FF  ?  02
	  FF804   FF  ?  .
	: .pc
	  PC=0FF200  ?  .
	: g
	  Break at PC=FF240
	  PC=0FF240  CCR=81:I......C  SP=000FFF00
	  ER0=00000001  ER1=00010001  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	: d ff800 ff80f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   00 03 00 02 00 01 00 01  7F FF FF FF FB FF F7 FF   "................"
	: m ff800
	  FF800   00  ?  10
	  FF801   03  ?  00
	  FF802   00  ?  00
	  FF803   02  ?  33
	  FF804   00  ?  .
	: r
	  PC=0FF240  CCR=81:I......C  SP=000FFF00
	  ER0=00000001  ER1=00010001  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	: .pc
	  PC=0FF240  ?  ff200
	  CCR=81  ?  .
	: g
	  Break at PC=FF240
	  PC=0FF240  CCR=81:I......C  SP=000FFF00
	  ER0=00000019  ER1=00500010  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	: d ff800 ff80f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   10 00 00 33 00 50 00 10  7F FF FF FF FB FF F7 FF   "...3.P.........."
	: m ff800
	  FF800   10  ?  aa
	  FF801   00  ?  aa
	  FF802   00  ?  00
	  FF803   33  ?  bb
	  FF804   00  ?  .
	: .pc
	  PC=0FF240  ?  ff200
	  CCR=81  ?  .
	: g
	  Break at PC=FF240
	  PC=0FF240  CCR=81:I......C  SP=000FFF00
	  ER0=0000005D  ER1=00E90077  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	: d ff800 ff80f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   AA AA 00 BB 00 E9 00 77  7F FF FF FF FB FF F7 FF   ".......w........"

3．考察
	動作結果を見て、A/Bをした時に「（A - 余り）÷B＝商」の関係が成り立っているかを考える。
	1．(3)16/(2)16 動作結果のメモリの値
		: d ff800 ff80f
		  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
		  FF800   00 03 00 02 00 01 00 01  FF FF FF FF FB FF F7 FF   "................"
		これより、1あまり1であることが求まった。
		「(3-1)/2=1」より、正しく動作していると考えられる。
	2．(1000)16/(33)16 動作結果のメモリの値
		: d ff800 ff80f
		  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
		  FF800   10 00 00 33 00 50 00 10  FF FF FF FF FB FF F7 FF   "...3.P.........."
		 これより、50あまり10であることが求まった。
		 「(1000-10)16/(33)16=(50)16」
		 すなわち，
		 「(43571-119)10/(187)10=(233)10」より、正しく動作していると考えられる。
	3．(aaaa)16/(bb)16 動作結果のメモリの値
		: d ff800 ff80f
		  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
		  FF800   AA AA 00 BB 00 E9 00 77  7F FF FF FF FB FF F7 FF   ".......w........"
		これより、BBあまり77であることが求まった。
		「(aaaa-77)16/(bb)16=(E9)16」より、正しく動作していると考えられる。
		
	unsigned short intについて
	プログラムの変数の型をunsigned short intにしているが，
	変数をshort int型に変更したプログラムを実行した．
	
	: m ff800
	  FF800   10  ?  aa
	  FF801   00  ?  aa
	  FF802   00  ?  00
	  FF803   33  ?  bb
	  FF804   00  ?  .
	: r
	  PC=0FF240  CCR=81:I......C  SP=000FFF00
	  ER0=00000019  ER1=00500010  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	: .pc
	  PC=0FF240  ?  ff200
	  CCR=81  ?  .
	: g
	  Break at PC=FF240
	  PC=0FF240  CCR=A9:I.H.N..C  SP=000FFF00
	  ER0=0000005D  ER1=0000AAAA  ER2=00000000  ER3=00000000
	  ER4=00000000  ER5=00000000  ER6=00000000  ER7=000FFF00
	: d ff800 ff80f
	  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
	  FF800   AA AA 00 BB 00 00 AA AA  FF FF FF FF FB FF F7 FF   "................"

	すると，メモリの値が
	: d ff800 ff80f
		  <ADDR>                  <  D  A  T  A  >                     < ASCII CODE >
		  FF800   AA AA 00 BB 00 00 AA AA  FF FF FF FF FB FF F7 FF   "................"
	になり，これは商が0，あまりがAAAAと，正しく計算されていない．
	
	これは，最上位bitが1であったときの大小判断の動作が正しくされていないことが原因である．
	(unsigned をつけないと，最上位bitが1の時，負の数と判断される）
	
4．まとめ
	シフト命令と減算命令で除算プログラムのアルゴリズムを理解することができた。
	また、アセンブラ言語でのプログラムの動作手順、プログラムの構造を理解した。
	unsigned変数は符号なしの変数の型である．
	singed(unsignedをつけないとき）変数は最上位bitが符号になるため，計算の挙動が変わり，
	プログラムを作成する上で，これを念頭に置くべきである．


