/* ------------------------------------------------------------------------ */
/*  Hyper Operating System V4  サンプルプログラム                           */
/*   コンフィギュレーションファイル                                         */
/*                                                                          */
/*                                  Copyright (C) 1998-2002 by Project HOS  */
/*                                  http://sourceforge.jp/projects/hos/     */
/* ------------------------------------------------------------------------ */

/* tuned by kosaka */

INCLUDE("\"sample.h\"");      /* ←←← ここにユーザのヘッダファイルを記述 */
INCLUDE("\"MinSys3069.h\"");


/* HOS 独自の設定 */
HOS_KERNEL_HEAP(0);         /* カーネルヒープの設定(省略時 0) */
HOS_TIM_TIC(1, 1);          /* タイムティックの設定(省略時 1/1 ) */
HOS_MAX_TPRI(8);            /* 最大優先順位(省略時 16) */
HOS_MIN_INTNO(0);           /* 割り込み番号の最小値(省略時 0) */
HOS_MAX_INTNO(256);         /* 割り込み番号の最大値(省略時 0) */
HOS_MAX_TSKID(8);           /* 最大タスクID番号(省略時静的生成に必要なだけ) */


/* SystemTimer */
ATT_INI({TA_HLNG, 0, initSystemTimer});                /*初期化関数静的起動*/
ATT_ISR({TA_HLNG, 0, 24, SystemTimerHandler});     /*割り込みハンドラの登録*/

/* SCI */
ATT_ISR({TA_HLNG, 0, 57, SCI1_RXI_handler});       /*割り込みハンドラの登録*/
ATT_ISR({TA_HLNG, 0, 56, SCI1_ERI_handler});       /*割り込みハンドラの登録*/

/* タスク */
CRE_TSK(tskID_Z,   {TA_HLNG | TA_ACT, 1, idletask, 8, 128, NULL});

ATT_INI({TA_HLNG, 0, OnHosStart});                     /*初期化関数静的起動*/
CRE_TSK(TSKID_0, {TA_HLNG, 1, printTime  , 1, 256, NULL});         /*静的生成*/
CRE_TSK(TSKID_1, {TA_HLNG, 1, primeNumber, 5, 256, NULL});         /*静的生成*/

/* ==========================================================================
参考
ATT_INI　HOS起動時に初期化関数静的に起動
　ATT_INI({ATR iniatr,VP_INT exinf, FP inirtn})
　引数
　1) 初期化ルーチン属性　ATR型iniatr C言語用インターフェイス　TA_HLNG　もしく
　   は　アセンブリ言語（TA_ASM） 
　2) 初期化ルーチン拡張情報　VP_INT型exinf 初期化ルーチンの実行時に渡す値 
　3) 初期化ルーチン関数へのポインタ　FP型inirtn　

ATT_ISR　割り込みハンドラの登録　このハンドラは割り込み属性を持たない通常の関
　　　　　数でよい
　ATT_ISR({ATR isratr,VP_INT exinf,INTNO intno,FP isr})
　引数
　1) 割り込みルーチン属性　ATR型isratrメンバ変数 ルーチンの関数がどの言語で書
　   かれているか　TA_HLNG(C言語）　TA_ASM(アセンブル言語） 
　2) 割り込みサービスルーチン拡張情報　 VP_INT型exinf　メンバ変数　サービスコ
　   ールルーチンが呼び出されるときに渡される値 
　3) ルーチンを付加する割り込み番号 INTNO型intno メンバ変数　サービスルーチン
　   を起動する割り込み番号　CPUによって決められている
　4) サービスルーチン関数へのポインタ　FP型isr メンバ変数　割り込みサービス
　   ルーチン関数

CRE_TSK　HOS起動時にタスクを静的に生成
　CRE_TSK(ID taskid,{ATR taskatr,VP_INT exinf,FP task,PRI itaskpriority,
　        SIZE stacksize,VP stack}) 
　引数
　1) タスクID (起動時に使用する)
　2) タスク生成構造体(T_CTSK型) 
　　2.1) タスク属性　　TA_の二つのほかに追加で、TA_ACTが指定できる。これで、実
　　     行可能状態にまで一気に移すことができる。 
　　2.2) 拡張情報　　関数を実行するときのパラメータとして渡す。 
　　2.3) タスクが実行する関数　関数へのポインタ 
　　2.4) 初期優先順位　　　タスクのベース優先順位を指定する。 
　　2,5) スタックサイズ(バイト)　 
　　2.6) スタックの開始位置　　NULLを指定すると、カーネルがスタックサイズ分だけ
　　     自動で確保してくれる。*
=========================================================================== */

/* ------------------------------------------------------------------------ */
/*  Copyright (C) 1998-2002 by Project HOS                                  */
/* ------------------------------------------------------------------------ */
